swagger: '2.0'
info:
  version: 0.0.3
  title: 'eCom Checkout API'
host: adidas.com
basePath: '/api/checkout'
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json; charset=utf-8

securityDefinitions:
  Authorization:
    type: basic
    description: "Authorization header from add to basket response to be used on every subsequent request. If not provided, the API will generate it."

  Session Cookie:
    type: apiKey
    in: header
    name: SFCC Session Cookie
    description: "SFCC cookies from add to basket response (dwsid* and dwsecuretoken*) to be sent on every subsequent request. If not provided, the API will generate them."

security:
  - Authorization: []
  - Session Cookie: []

paths:
  '/baskets':
    post:
      tags:
        - Basket
      description: creates a new basket
      responses:
        '201':
          description: Success
          schema:
            '$ref': '#/definitions/Basket'
        '400':
          description: error
          schema:
            '$ref': '#/definitions/ErrorResponse'
        '500':
          description: server error, api is not able to manage error
  '/baskets/{basket_id}':
    parameters:
      - '$ref': '#/parameters/basket_id'
    get:
      tags:
        - Basket
      description: DEPRECATED - returns the cart identified by the id to the caller
      operationId: getCart
      responses:
        '200':
          description: Success
          schema:
            '$ref': '#/definitions/Basket'
        '400':
          description: error
          schema:
            '$ref': '#/definitions/ErrorResponse'
        '500':
          description: server error, api is not able to manage error
    patch:
      tags:
        - Basket
      description: modifies some basket properties with the given content
      parameters:
        - name: basketModification
          in: body
          required: true
          schema:
            '$ref': '#/definitions/BasketModification'
      responses:
        '200':
          description: Success
          schema:
            '$ref': '#/definitions/Basket'
        '400':
          description: error
          schema:
            '$ref': '#/definitions/ErrorResponse'
        '500':
          description: server error, api is not able to manage error
    delete:
      tags:
        - Basket
      description: delete the given basket.
      responses:
        '200':
          description: The basket was deleted successfully.
        '400':
          description:
            Indicates that the customer assigned to the basket does not
            match the verified customer represented by the JWT token.
        '500':
          description: server error, api is not able to manage error
  "/baskets/{basket_id}/items":
    post:
      tags:
        - Basket
      description: Allows the user to add a product to the cart
      operationId: addToCart
      parameters:
        - name: Content-Type
          in: header
          type: string
          required: true
          enum:
            - application/json
        - '$ref': '#/parameters/basket_id'
        - name: products
          in: body
          description: The product to be added
          required: true
          schema:
            $ref: '#/definitions/MultipleProductToAdd'
      responses:
        '200':
          description: Success
          schema:
            '$ref': '#/definitions/Basket'
        '400':
          description: error
          schema:
            '$ref': '#/definitions/ErrorResponse'
        '500':
          description: server error, api is not able to manage error
  '/baskets/{basket_id}/items/{item_id}':
    parameters:
      - '$ref': '#/parameters/basket_id'
    delete:
      tags:
        - Basket
      description: Allows the user to remove product from the cart
      parameters:
        - name: item_id
          in: path
          description: identify unique product line item id in the cart
          required: true
          type: string
          x-example: item_id
      responses:
        '200':
          description: Success
          schema:
            '$ref': '#/definitions/Basket'
        '400':
          description: error
          schema:
            '$ref': '#/definitions/ErrorResponse'
        '500':
          description: server error, api is not able to manage error
    patch:
      tags:
        - Basket
      description: Allow the user to update product line item of given basket
      parameters:
        - name: item_id
          in: path
          description: identify unique product line item id in the cart
          required: true
          type: string
          x-example: item_id
        - name: product
          in: body
          description: The product to be updated
          required: true
          schema:
            '$ref': '#/definitions/ProductToAdd'
      responses:
        '200':
          description: Success
          schema:
            '$ref': '#/definitions/Basket'
        '400':
          description: error
          schema:
            '$ref': '#/definitions/ErrorResponse'
        '500':
          description: server error, api is not able to manage error

parameters:
  basket_id:
    name: basket_id
    in: path
    description: It represents basket unique identifier
    required: true
    pattern: '^[a-z0-9]{26}$'
    type: string
  address_id:
    name: address_id
    in: path
    description: It represents unique identifier of address
    required: true
    pattern: '^[a-z0-9]{26}$'
    type: string
  payment_method_id:
    name: payment_method_id
    in: path
    description: It's a payment method identifier
    required: true
    type: string
  gift_certificate_id:
    name: gift_certificate_id
    in: path
    description: Payment Instrument ID in Commerce Cloud
    required: true
    type: string
  order_id:
    name: order_id
    in: path
    description: The order id
    required: true
    type: string
definitions:
  Customer:
    properties:
      customerId:
        type: string
        description: Customer's unique id of SFCC
      name:
        type: string
        description: Customer's name
      email:
        '$ref': '#/definitions/CustomerEmail'
        description: It represents customer email address
      encryptedEmail:
        type: string
        description: Encrypted version of customer email. Used for analytics purposes
      receiveSmsUpdates:
        type: boolean
        description: Should the customer receive SMS notifications. Only enabled for CnC delivery.
      isLoggedIn:
        type: boolean
        description: Defines if this customer is logged in or not.
  AddressValidationResult:
    properties:
      suggestionList:
        type: array
        items:
          '$ref': '#/definitions/AddresValidationSuggestion'
      isValid:
        type: boolean
        description: It shows if address is valid
      isCorrected:
        type: boolean
        description: It shows if address is corrected
      jobToken:
        type: string
        description: It's a token returned by address validation service (optional)
      jobTokenRemainingUsage:
        type: number
        description: It shows how many times we can reuse jobtoken (optional)
  AddresValidationSuggestion:
    properties:
      zipCode:
        type: string
        description: postal code
      city:
        type: string
        description: city
      houseNumber:
        type: string
        description: house number
      street:
        type: string
        description: street
      province:
        type: string
        description: province
      formattedAddress:
        type: string
        description: formatted address
  Message:
    properties:
      messageType:
        type: string
        enum:
          - INFO
          - WARN
          - ERROR
          - SUCCESS
        description: It shows the type of message; info, warn, error or success
      type:
        type: string
        description: It shows type of error.
      details:
        '$ref': '#/definitions/MessageDetail'
  MessageDetail:
    properties:
      productId:
        '$ref': '#/definitions/ProductId'
        description: The unique SKU
      shipmentId:
        type: string
        description: Unique shipment id
      articleNumber:
        type: string
      maximumQuantity:
        type: number
      requestedQuantity:
        type: number
      availableQuantity:
        type: number
      outOfStockLetters:
        type: array
        items:
          type: string
      outOfStockNumbers:
        type: array
        items:
          type: string
      badgeMissing:
        type: boolean
  MultipleProductToAdd:
    type: array
    items:
      '$ref': '#/definitions/ProductToAdd'
  ProductToAdd:
    type: object
    required:
      - productId
    properties:
      productId:
        '$ref': '#/definitions/ProductId'
        description: The unique SKU
      quantity:
        type: number
        description: The amount of product to be added to cart. By default is 1
      recipe:
        '$ref': '#/definitions/Recipe'
        description:
          The recipe specification for personalized products
      recipeId:
        type: string
        description:
          The unique receipe id sent from miconfigurator. It is used to
          validate personalization recipe
      customizationRecipeId:
        type: string
        description:
          The unique receipe id sent from miconfigurator. It is used to
          validate customization recipe
      masterProductId:
        '$ref': '#/definitions/MasterProductId'
        description: TheUnique master product id.
      displaySize:
        type: string
        description: The country specific size value.
      captchaResponse:
        type: string
        description: google captcha response
      segmentationId:
        type: string
        description: Segmentation string used to define the customer group for the basket.
  Recipe:
    type: object
    required:
      - articleNumber
      - quantity
      - selectedOptions
    properties:
      articleNumber:
        type: string
        description: The article number that this recipe is based on
      quantity:
        type: number
        description: The quantity of products that will use this recipe
      selectedOptions:
        '$ref': '#/definitions/PersonalizationOptions'
        description: The recipe options
      sku:
        type: string
        description: The sku of the item
      countrySize:
        type: string
        description: The size based on country-specific sizes
      technicalSize:
        type: string
        description: The unique technical size (same across all countries)
  PersonalizationOptions:
    type: object
    description: The personalization objects based on the MiConfigurator Service
  GiftCertificate:
    type: object
    required:
      - cardNumber
      - pinNumber
    properties:
      cardNumber:
        type: string
        description: The gift card number
        pattern: '^[0-9]{19}$'
      pinNumber:
        type: string
        description: The pin number of the gift card
        pattern: '^[0-9]{4}$'
      amount:
        type: number
        description: The amount authorized by this gift card
  ExternalAddressInformation:
    type: object
    properties:
      shippingAddress:
        '$ref': '#/definitions/ShippingAddress'
        description:
          The shipping address from PAYPALECS
      billingAddress:
        '$ref': '#/definitions/BillingAddress'
        description:
          The billing address from PAYPALECS
      customer:
        '$ref': '#/definitions/Customer'
  Order:
    type: object
    required:
      - orderId
      - resourceState
      - taxationPolicy
      - creationDate
      - currency
      - shipmentList
      - pricing
      - billingAddress
      - shippingAddress
    properties:
      orderId:
        type: string
        description: The unique identifier for the order.
      orderToken:
        type: string
        description: The token for the order used for order tracking page url.
      resourceState:
        type: string
        description:
          The resource_state represents the server side state of specific
          resource. To use the resource state for optimistic locking you have to include
          the resource state from the last server response in your next state changing
          (DELETE, PATCH, POST, PUT) request. You should always prefer to use the
          _resource_state property in the body. In case the requested API doesn't
          have a body use the x-dw-resource-state header. Whenever a resource state
          is part of a client's request, OCAPI verifies it by comparing the given
          value with the server resource state. If both resource states are equal
          the operation is executed, otherwise an HTTP 409 ResourceStateConflictException
          fault is returned. In case of a create request (e.g. with PUT) where the
          resource is not expected to be existing (with not_exists state), the returned
          fault is an HTTP 409 ResourceAlreadyExistsException instead.
      taxationPolicy:
        type: string
        enum:
          - net
          - gross
        description:
          The taxation policy used for the basket. It will determine if
          the prices in the basket are net or gross
      creationDate:
        '$ref': '#/definitions/DateTime'
        description: The date-time of Order creation
      paymentStatus:
        type: string
        enum:
          - not_paid
          - part_paid
          - paid
      status:
        '$ref': '#/definitions/OrderStatus'
        description: Status of an order
      currency:
        type: string
        description: Currency information of price like EUR
        pattern: '^[A-Z]{3}$'
      shipmentList:
        type: array
        items:
          '$ref': '#/definitions/Shipment'
        description: It's a collection of shipment.
      billingAddress:
        '$ref': '#/definitions/BillingAddress'
        description:
          The billing address. This property is part of basket checkout
          information only.
      shippingAddress:
        '$ref': '#/definitions/ShippingAddress'
        description:
          The shipping address. Basket can have one shipping addresses
          where products can be dispatched to.
      pickupPoint:
        '$ref': '#/definitions/PickupPoint'
        description: Pickup point information if a pickup point is set.
      pricing:
        '$ref': '#/definitions/LineItemContainerPricing'
        description: The line item container pricing information
      discountList:
        type: array
        items:
          '$ref': '#/definitions/Discount'
        description: The collection of discount. Basket can have multiple discount.
      couponList:
        type: array
        items:
          '$ref': '#/definitions/Coupon'
        description:
          The collection of coupon. It contains of any product, shipping
          or order releated coupon.
      paymentInstrumentList:
        type: array
        items:
          '$ref': '#/definitions/PaymentInstrument'
        description: The collection of payment instruments
      paymentFailureCode:
        type: string
        description: Formatted payment failure code
        example: 'confirm.error.paymentdeclined.3d_secure:_authentication_failed'
      messageList:
        type: array
        items:
          '$ref': '#/definitions/Message'
      customer:
        allOf:
          - $ref: '#/definitions/Customer'
          - type: object
            required: [customerId]
        description: Customer related information
      customerOrderHistoryStatus:
        type: number
        description: Customer purchases info (repeat, reactivated or a new customer)
      basketReference:
        '$ref': '#/definitions/BasketId'
        description: The reference to the basket id used to create this order
      taxCalculationMissing:
        type: boolean
        description: true when tax calculation is missing, traditionally happens when the address is wrong.
      npsSurveyURL:
        type: string
        description: Base URL for collecting network promoter score from user
  OrderStatus:
    type: string
    enum:
      - created
      - new
      - open
      - completed
      - cancelled
      - replaced
      - failed
  Basket:
    type: object
    required:
      - basketId
      - resourceState
      - taxationPolicy
      - currency
      - pricing
      - totalProductCount
      - modifiedDate
    properties:
      creationDate:
        '$ref': '#/definitions/DateTime'
        description: It represents  date-time of Basket creation
      modifiedDate:
        '$ref': '#/definitions/DateTime'
        description: It represent last update date-time of Basket
      customer:
        allOf:
          - $ref: '#/definitions/Customer'
          - type: object
            required: [customerId]
        description: Customer related information
      totalProductCount:
        type: integer
        description: It shows total product count in basket
      basketId:
        '$ref': '#/definitions/BasketId'
        description: The unique identifier for the basket.
      resourceState:
        type: string
        description:
          The resource_state represents the server side state of specific
          resource. To use the resource state for optimistic locking you have to include
          the resource state from the last server response in your next state changing
          (DELETE, PATCH, POST, PUT) request. You should always prefer to use the
          _resource_state property in the body. In case the requested API doesn't
          have a body use the x-dw-resource-state header. Whenever a resource state
          is part of a client's request, OCAPI verifies it by comparing the given
          value with the server resource state. If both resource states are equal
          the operation is executed, otherwise an HTTP 409 ResourceStateConflictException
          fault is returned. In case of a create request (e.g. with PUT) where the
          resource is not expected to be existing (with not_exists state), the returned
          fault is an HTTP 409 ResourceAlreadyExistsException instead.
      taxationPolicy:
        type: string
        enum:
          - net
          - gross
        description:
          The taxation policy used for the basket. It will determine if
          the prices in the basket are net or gross
      currency:
        type: string
        description: Currency information of price like EUR
        pattern: '^[A-Z]{3}$'
      shipmentList:
        type: array
        items:
          '$ref': '#/definitions/Shipment'
        description: It's a collection of shipment.
      billingAddress:
        '$ref': '#/definitions/BillingAddress'
        description:
          The billing address. This property is part of basket checkout
          information only.
      pickupPoint:
        '$ref': '#/definitions/PickupPoint'
        description: Pickup point information if a pickup point is set.
      shippingAddress:
        '$ref': '#/definitions/ShippingAddress'
        description:
          The collection of shipping address. Basket can have one shipping
          addresses where products can be dispatched to.
      shippingAddressValidation:
        '$ref': '#/definitions/AddressValidationResult'
        description:
          Address validation result based on the response from validation
          service
      pricing:
        '$ref': '#/definitions/LineItemContainerPricing'
        description: The line item container pricing information
      discountList:
        type: array
        items:
          '$ref': '#/definitions/Discount'
        description: The collection of discount. Basket can have multiple discount.
      couponList:
        type: array
        items:
          '$ref': '#/definitions/Coupon'
        description:
          The collection of coupon. It contains of any product, shipping
          or order releated coupon.
      paymentInstrumentList:
        type: array
        items:
          '$ref': '#/definitions/PaymentInstrument'
        description: The collection of payment instruments
      taxBreakDown:
        type: object
        properties:
          GST:
            type: number
            description: Goods and Services Tax
          PST:
            type: number
            description: Provincial Sales Tax
          HST:
            type: number
            description: Harmonized Sales Tax
          QST:
            type: number
            description: Quebec Sales Tax
      taxBreakdownList:
        type: array
        items:
          '$ref': '#/definitions/TaxBreakdown'
        description: The collection of Tax Breakdown field. It's used in CA market
      messageList:
        type: array
        items:
          '$ref': '#/definitions/Message'
      checkoutId:
        type: string
        description:
          The checkout id associated with this basket for payment-related
          operations
      flashTimeLeft:
        type: number
        description: The time left, in milliseconds, since the most recently added flash product was reserved
      taxCalculationMissing:
        type: boolean
        description: true when tax calculation is missing, traditionally happens when the address is wrong.
      segmentationId:
        type: string
        description: string used to deliver information about ongoing AB tests.
  BasketModification:
    type: object
    properties:
      billingAddress:
        '$ref': '#/definitions/BillingAddress'
        description: The billing address
      shippingAddress:
        '$ref': '#/definitions/ShippingAddress'
        description: The shipping address
      customer:
        '$ref': '#/definitions/Customer'
        description: Customer related information
      methodList:
        type: array
        items:
          allOf:
            - $ref: '#/definitions/ShippingMethod'
            - type: object
              required: [id, shipmentId]
        description: The shipping methods to be set for this basket
      newsletterSubscription:
        type: boolean
        description: A flag to enable or not newsletter subscription for this user
      pickupPoint:
        type: object
        allOf: # TODO: Change to oneOf once upgraded to OAPI 3.0
          - $ref: '#/definitions/CnCStoreModification'
          - $ref: '#/definitions/PUDOModification'
        description: Set pickup point for e.g. CnC
      segmentationId:
        type: string
        description: string used to deliver information about ongoing AB tests.
  OrderRequest:
    type: object
    required:
      - basketId
    properties:
      basketId:
        '$ref': '#/definitions/BasketId'
        description: The id of the basket associated with this order
      paymentInstrument:
        '$ref': '#/definitions/PaymentInstrument'
        description: The payment instrument used to pay for this basket
      authorizedPaymentInstrument:
        '$ref': '#/definitions/authorizedPaymentInstrument'
        description: The authorized payment instrument used for submitting order with Hosted Payment Page method
      encryptedInstrument:
        type: string
        description: The encrypted instrument information
      fingerprint:
        type: string
        description: The payment provider fingerprint
  PaymentInstrument:
    required:
      - paymentMethodId
    properties:
      id:
        type: string
        description: The unique payment instrument id
      amount:
        '$ref': '#/definitions/Price'
        description: The payment transaction amount
      cardType:
        type: string
        description: Card type. example; VISA
      expirationMonth:
        type: number
        description: It represents expiration month of card
      expirationYear:
        type: number
        description: It represents expiration year of card
      holder:
        type: string
        description: The name written on payment card
      lastFour:
        type: string
        description: It shows the last 4 digit of card
      paymentMethodId:
        type: string
        description: The payment method id. example; CREDIT_CARD
      balance:
        type: number
        pattern: "^\\d+((,|.)\\d{2})?$"
        description: The total current balance on the gift card
      maskedGiftCardNumber:
        type: string
        description: The masked gift card number
  authorizedPaymentInstrument:
    required:
      - authResult
      - merchantReference
      - merchantSig
      - paymentMethod
      - pspReference
      - shopperLocale
      - skinCode
    properties:
      authResult:
        type: string
        description: Payment authentication results we have from payment provider
      merchantReference:
        type: string
        description: Merchant reference value received from payment provider
      merchantSig:
        type: string
        description: Merchant signature value received from payment provider on previous step
      paymentMethod:
        type: string
        description: The payment method id. For example "paypal"
      pspReference:
        type: string
        description: Payment reference reference value received from payment provider
      shopperLocale:
        type: string
        description: The locale of the ecom shop.
      skinCode:
        type: string
        description: Skip code value received from payment provider
    example:
      authResult: AUTHORISED
      merchantReference: AIE99999999
      merchantSig: JFUXDySRdDCzNQEmohodfklashdfsdfKUk=
      paymentMethod: paypal
      pspReference: 8515512816245811
      shopperLocale: en_IE
      skinCode: 0aYDtTjE
  Discount:
    required:
      - id
      - name
      - price
    properties:
      id:
        type: string
        description: The unique id of promotion
      name:
        type: string
        description: The name of promotion
      price:
        '$ref': '#/definitions/Price'
      calloutMessage:
        type: string
        description: Callout message of promotion. It can be an HTML content
      couponItemId:
        type: string
        description: it's used to link coupon item id in couponList attribute
  Coupon:
    type: object
    required:
      - couponCode
    properties:
      id:
        type: string
        description: The unique id of coupon
      couponCode:
        type: string
        description: The voucher code consumers can apply on basket
      statusCode:
        type: string
        description: Enum of string
        enum:
          - coupon_code_already_in_basket
          - coupon_code_already_redeemed
          - coupon_code_unknown
          - coupon_disabled
          - redemption_limit_exceeded
          - customer_redemption_limit_exceeded
          - timeframe_redemption_limit_exceeded
          - no_active_promotion
          - coupon_already_in_basket
          - no_applicable_promotion
          - applied
          - adhoc
      valid:
        type: boolean
        description:
          A flag indicating whether the coupon item is valid. A coupon
          line item is valid if the status code is 'applied' or 'no_applicable_promotion'.
      message:
        type: string
        description: Localized message regarding status code. It's a plain text
  TaxSimulation:
    type: object
    required:
    - total
    - totalTax
    properties:
      total:
        "$ref": "#/definitions/Price"
        description: The total of the basket with the simulated tax
      totalTax:
        "$ref": "#/definitions/Price"
        description: The total tax calculated.
  LineItemContainerPricing:
    required:
      - total
      - baseTotal
      - totalTax
      - productTotal
      - productTotalBeforeDiscounts
      - productTotalBeforeOrderDiscounts
      - shippingTotal
      - shippingBaseTotal
    properties:
      total:
        '$ref': '#/definitions/Price'
        description:
          The total of the basket, this includes discounts, line items
          and shipping. If the taxation policy is GROSS, it also includes tax. If
          the taxation policy is NET, it does not include tax
      baseTotal:
        '$ref': '#/definitions/Price'
        description:
          The total of the basket before order level discounts, this includes
          line item discounts, line items and shipping. If the taxation policy is
          GROSS, it also includes tax. If the taxation policy is NET, it does not
          include tax
      totalTax:
        '$ref': '#/definitions/Price'
        description:
          The total tax amount. This includes shipping and line item tax
          as well as tax reductions through all discounts
      productTotal:
        '$ref': '#/definitions/Price'
        description:
          The total of the line items this excludes shipping costs and
          order level discounts, but includes line item discounts
      productTotalBeforeDiscounts:
        '$ref': '#/definitions/Price'
        description: The total of line items, excluding shipping costs, order level discounts and line item discounts
      productTotalBeforeOrderDiscounts:
        '$ref': '#/definitions/Price'
        description: The total of line items, excluding shipping costs and order level discounts
      shippingTotal:
        '$ref': '#/definitions/Price'
        description: The total shipping costs including shipping discounts
      shippingBaseTotal:
        '$ref': '#/definitions/Price'
        description: The total of the shipping costs before discounts
  ProductLineItem:
    required:
      - itemId
      - productId
      - productName
      - canonicalProductName
      - productImage
      - quantity
      - pricing
      - gender
      - color
      - size
      - isFlashProduct
    properties:
      itemId:
        type: string
        description: The unique id of product line items
      productId:
        '$ref': '#/definitions/ProductId'
      productName:
        type: string
      canonicalProductName:
        type: string
      productImage:
        type: string
        pattern: "^http(s)?:\\/\\/"
      quantity:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
      pricing:
        '$ref': '#/definitions/LineItemPricing'
      gender:
        type: string
      color:
        type: string
      size:
        type: string
        description: size information
      discountList:
        type: array
        items:
          '$ref': '#/definitions/Discount'
      allowedActions:
        '$ref': '#/definitions/AllowedAction'
      personalizationFields:
        type: object
      maxQuantityAllowed:
        type: integer
        description: It determines the quantity consumer can add
      isBonusProduct:
        type: boolean
        description: It determines whether product is a bonus product.
      productType:
        type: string
        description: It determines the type of product
        enum:
          - INLINE
          - PRE_ORDER
          - MIADIDAS
          - YOURREEBOK
          - PERSONALIZED
      editLinkCustomizableProduct:
        type: string
        description: It is the link of PDP where consumer can edit customized products
      availableStock:
        type: integer
        description:
          It shows ATS value of inventory. In CHK-API, we should set to
          15 if ATS is 15 or more than 15. We should set to actual value of ATS if
          ATS is less than 15. Therefore we're align with the logic of PDP. We don't
          want to expose exact stock information to client side.
      lastAdded:
        type: boolean
        description:
          true when product line item was added last. Optional, only available
          after add item request.
      isFlashProduct:
        type: boolean
        description: true when the product is a flash product
  AllowedAction:
    required:
      - delete
      - edit
      - moveToWishlist
    properties:
      delete:
        type: boolean
        description: It determines if deleting product is allowed
      edit:
        type: boolean
        description: It determines if editing product is allowed
      moveToWishlist:
        type: boolean
        description: It determines if moving product to wishlist is allowed
  TaxBreakdown:
    properties:
      name:
        type: string
        description: The name of the field to be displayed on each tax breakdown.
      value:
        type: string
        description: The value of the field to bed displayed on each tax breakdown
  BillingAddress:
    description: Required Fields are market specific and defined via configurations
    properties:
      id:
        type: string
        description: The unique address id
      address1:
        type: string
        description: The address line 1 information
      address2:
        type: string
        description: The address line 2 information
      city:
        type: string
        description: City information
      country:
        type: string
        description: Country information
      zipcode:
        type: string
        description: Zipcode information
      stateCode:
        description: The two digit code for a state
        '$ref': '#/definitions/StateCode'
      firstName:
        type: string
        description: First name information
      lastName:
        type: string
        description: Last name information
      countyProvince:
        type: string
        description: County province information
      companyName:
        type: string
        description: Company name information
      apartmentNumber:
        type: string
        description: Apartment number information
      houseNumber:
        type: string
        description: House number information
      suburb:
        type: string
        description: Suburb information
      island:
        type: string
        description: Island information
  CnCStoreModification:
    type: object
    properties:
      cncStoreId: # TODO: Add as required once using oneOf with OAPI 3.0
        type: string
        description: Click and Collect store id to set the store or null to remove it
      lon:
        type: number
        description: Longitude
      lat:
        type: number
        description: Latitude
  PUDOModification:
    type: object
    properties:
      pudoId: # TODO: Add as required once using oneOf with OAPI 3.0
        type: string
        description: The id for the PUDO box that the customer will pickup his package
      postNumber:
        type: string
        description: The customer postnumber id that he will use to pickup his package
  ShippingAddress:
    description: Required Fields are market specific and defined via configurations
    type: object
    properties:
      id:
        type: string
        description: The unique address id
      address1:
        type: string
        description: The address line 1 information
      address2:
        type: string
        description: The address line 2 information
      city:
        type: string
        description: City information
      country:
        type: string
        description: Country information
      zipcode:
        type: string
        description: Zipcode information
      stateCode:
        description: The two digit code for a state
        '$ref': '#/definitions/StateCode'
      firstName:
        type: string
        description: First name information
      lastName:
        type: string
        description: Last name information
      phoneNumber:
        type: string
        description: Consumer's phone number
      countyProvince:
        type: string
        description: County province information
      companyName:
        type: string
        description: Company name information
      apartmentNumber:
        type: string
        description: Apartment number information
      houseNumber:
        type: string
        description: House number information
      suburb:
        type: string
        description: Suburb information
      island:
        type: string
        description: Island information
      useAsBillingAddress:
        type: boolean
        description:
          The flag indicating whether the given address will also be used
          as billing address.
  Shipment:
    required:
      - shipmentId
      - productLineItemList
      - shippingLineItem
    properties:
      shipmentId:
        type: string
        description: The unique id of shipment
      shippingOnDate:
        '$ref': '#/definitions/Date'
        description: the date of shipping starts for backorder and preorder products.
      shipmentType:
        type: string
        description:
          Identify shipment type; inline, miadidas, preorder, backorderm
          yourreebok
        enum:
          - inline
          - miadidas
          - preorder
          - backorder
          - yourreebok
      productLineItemList:
        type: array
        items:
          '$ref': '#/definitions/ProductLineItem'
      shippingLineItem:
        items:
          '$ref': '#/definitions/ShippingLineItem'
  ShippingLineItem:
    required:
      - id
      - name
      - pricing
    properties:
      name:
        type: string
        description: The name of shipping method
      description:
        type: string
        description: The explanation of shipping method
      id:
        type: string
        description: The unique shipping method id
      pricing:
        '$ref': '#/definitions/LineItemPricing'
        description: The price information
      discountList:
        type: array
        items:
          '$ref': '#/definitions/Discount'
        description:
          The collection of discount. Shipping line item can have multiple
          discount.
      carrierServiceName:
        type: string
        description: Carier service name
      delivery:
        '$ref': '#/definitions/TimeInterval'
        description: The delivery range of shipment
  ShippingMethod:
    required:
      - id
    properties:
      id:
        type: string
        description: Unique identification of shipping method.
      type:
        type: array
        items:
          '$ref': '#/definitions/ShippingMethodType'
        description: Determines the type of shipping method.
      name:
        type: string
        description: Name of shipping method.
      description:
        type: string
        description: Description of shipping method.
      carrierName:
        type: string
        description: The name of service which delivers order
      carrierCode:
        type: string
        description: Carier code
      carrierServiceCode:
        type: string
        description: Carier service code
      carrierServiceName:
        type: string
        description: Carier service name
      groupCodes:
        type: array
        items:
          '$ref': '#/definitions/GroupCodesType'
        description: Carier group codes
      collection:
        '$ref': '#/definitions/TimeInterval'
        description: The collection time interval of the shipping method
      delivery:
        '$ref': '#/definitions/TimeInterval'
        description: The delivery time interval of the shipping method
      price:
        '$ref': '#/definitions/Price'
        description: The cost of shipping method.
      isDefault:
        type: boolean
        description: It shows whether shipping method is default
      shipmentId:
        type: string
        description:
          It represents the identifiaction what shipping method belongs
          to
      delayMessage:
        type: string
        description: Message informing of the potential delay
  TimeInterval:
    properties:
      from:
        type: number
        description: The start time of the interval (in ms)
      to:
        type: number
        description: The end time of the interval (in ms)
  ShippingMethodType:
    type: string
    enum:
      - inline
      - miadidas
      - preorder
      - backorder
      - yourreebok
  GroupCodesType:
    type: string
  ApplicablePaymentMethods:
    type: object
    required:
      - paymentMethods
    properties:
      paymentMethods:
        '$ref': '#/definitions/PaymentMethod'
        description: The array of applicable payment methods for this basket.
      checkoutId:
        type: string
        description: The checkout id related to this basket.
  PaymentMethod:
    required:
      - id
    properties:
      id:
        type: string
        description: The id of the payment method or card.
      name:
        type: string
        description: The localized name of the payment method or card.
      description:
        type: string
        description: The localized description of the payment method or card.
      cards:
        '$ref': '#/definitions/PaymentCardSpecification'
        description:
          The sorted array of payment cards (included only when the system
          payment method is CREDIT_CARD).
  PaymentCardSpecification:
    properties:
      cardType:
        type: string
        description: The type of the payment card.
      name:
        type: string
        description: The localized description of the payment card.
      description:
        type: string
        description: The localized description of the payment card.
      checksumVerificationEnabled:
        type: boolean
        description:
          A flag indicating whether the card number is verified using the
          Luhn checksum algorithm.
      numberLengthList:
        type: array
        items:
          type: string
        description:
          The sorted list of number lengths (individual lengths as well
          as length ranges).
      numberPrefixes:
        type: array
        items:
          type: string
        description:
          The sorted list of number prefixes (individual prefixes as well
          as prefix ranges).
      securityCodeLength:
        type: number
        format: int32
        description: The length of the security code for this card.
  RefundData:
    required:
      - returnOrderNumber
      - refundAmount
      - currency
      - shopperEmail
      - shopperFirstName
      - shopperLastName
      - shopperNationality
      - shopperDateOfBirth
      - consumerEuci
      - accountHolderName
      - bankName
      - iban
    properties:
      returnOrderNumber:
        type: string
        title: Return Order Number
        minLength: 10
        maxLength: 30
        description: Return Order Number provided by OMS to link payout request to refund case
      refundAmount:
        type: number
        minimum: 1
        maximum: 100000
        description: Amount of money in local currency to be refunded (decimal value is used). This value will be validated before any money is processed
      currency:
        type: string
        minLength: 3
        maxLength: 3
        description: 3-character Adyen currency code for the amount refunded. This value will be validated before any money is processed
      shopperEmail:
        type: string
        description: Email of the consumer who initiated refund request
      shopperFirstName:
        type: string
        description: The first name of the customer who initiated the refund request
      shopperLastName:
        type: string
        description: The last name of the customer who initiated the refund request
      shopperNationality:
        type: string
        minLength: 2
        maxLength: 2
        description: ISO 2-character country code
      shopperDateOfBirth:
        type: string
        minLength: 10
        maxLength: 10
        description: Birthdate of the consumer, in 'ISO-8601' format YYYY-MM-DD
      consumerEuci:
        type: string
        minLength: 14
        maxLength: 18
        description: eUCI of the consumer, provided by backend system
      accountHolderName:
        type: string
        minLength: 2
        maxLength: 256
        description: Full name of the bank account holder (name and surname)
      bankName:
        type: string
        minLength: 18
        maxLength: 40
        description: Name of the bank institute
      iban:
        type: string
        minLength: 2
        maxLength: 256
        description: International Bank Account Number in Europe
    example:
      refundData:
        returnOrderNumber: APL10003063_501811221049014308291673
        refundAmount: 399.95
        currency: EUR
        shopperDateOfBirth: 1920-01-01
        shopperEmail: test@test.com
        shopperNationality: DE
        consumerEuci: GUQHYZCPVBQHORMX
      bankData:
        accountHolderName: Adi Dassler
        bankName: Sparkasse Erlangen
        iban: DE8300000003459543223
  SuccessfulRefundRequest:
    required:
      - message
      - status
    properties:
      message:
        description: A human-readable message about status of the request
        type: string
      status:
        description: A status code in camelCase describing a status category or type
        type: string
    example:
      message: The refund request was successfully submitted to the Payment Provider
      status: Successful
  MasterProductId:
    type: string
    pattern: '^[A-Z0-9]{2,6}'
  ProductId:
    type: string
    pattern: '^[A-Z0-9]{2,6}_[0-9]{3}$'
  BasketId:
    type: string
    pattern: '^[a-z0-9]{26}$'
    x-example: '00000000000000000000000000'
  CustomerEmail:
    type: string
    pattern: '^([a-zA-Z0-9_\-\.\+]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,18})$'
    x-example: customer.email@mail.com
  Price:
    type: number
    pattern: "^\\d+((,|.)\\d{2})?$"
  LineItemPricing:
    required:
      - basePrice
      - price
    properties:
      baseUnitPrice:
        '$ref': '#/definitions/Price'
      unitPrice:
        '$ref': '#/definitions/Price'
      basePrice:
        '$ref': '#/definitions/Price'
      price:
        '$ref': '#/definitions/Price'
      priceAfterAllDiscounts:
        '$ref': '#/definitions/Price'
      unitPriceWithoutTax:
        '$ref': '#/definitions/Price'
  ErrorResponse:
    type: object
    required:
      - message
    properties:
      message:
        description: A human-readable message about the error
        type: string
      errorCode:
        description: A code message in camelCase describing a error category or type (ie. BasketNotFound)
        type: string
      messageList:
        description: Additional information provided by SFCC OCAPI response
        items:
          '$ref': '#/definitions/Message'
      details:
        description: A machine-readable error details that can be used for displaying error on API consumer side
        type: object
        properties:
          availableQuantity:
            description: Currently available stock for item that user is trying to order
            type: number
            example: 9
  Error400Response:
    type: object
    properties:
      errorCode:
        description: A code message in camelCase describing a error category or type (ie. InvalidParameters)
        type: string
      messageList:
        description: Additional information, for example a list of missing fields
        items:
          '$ref': '#/definitions/Message'
  DateTime:
    description: ISO8601 Timestamp
    type: string
  Date:
    description: ISO8601 Date
    type: string
  StateCode:
    type: string
  ShopperResultUrl:
    type: object
    properties:
      shopperResultUrl:
        description: The URL used by payment Hosted Pages such as Paypal for handling callbacks from third party applications
        type: string
        example: https://adidas.com/callback/PAYPAL
  PickupPoint:
    description: Pickup point details
    type: object
    properties:
      cncStore:
        '$ref': '#/definitions/Store'
        description: Pickup point store if using CnC
      pudoStore:
        '$ref': '#/definitions/Store'
        description: A pickup point (ie. Paketstation, DHL Boxes, etc) if using PUDO Delivery
  Store:
    description: A store from where items can be picked from along with address and open hours
    type: object
    properties:
      id:
        description: Unique store ID
        type: string
        example: GR342248,
      name:
        description: Store name
        type: string
        example: adidas Store Athens, Ermou Street,
      street:
        description: Street
        type: string
        example: Ermou Street 50
      city:
        description: City
        type: string
        example: Athens
      postalCode:
        description: Postal code
        type: string
        example: 1000AB
      telephoneNumber:
        type: string
        example: '+358 10 123 1123'
      state:
        type: string
        example: MOW
      country:
        description: Street
        type: string
        pattern: '[A-Z]{2}'
        example: GR
      distance:
        description: Distance to search location in km
        type: number
        example: 1.1135200567824
      latitude:
        type: number
        example: 37.97681880000
      longitude:
        type: number
        example: 23.72885410000
      openingHours:
        $ref: '#/definitions/StoreOpeningHours'
      daysToWaitForDelivery:
        description: Number of days required to deliver products in store. When 0, products are in store and can be picked up today.
        type: number
        example: 3
      deliveryWindow:
        description: An estimation range for the days days required to deliver products in store. When numbers are the same, there's no uncertainty about the pickup time. When 0, products are in store and can be picked up today.
        type: object
        properties:
          from:
            type: number
            example: 1
          to:
            type: number
            example: 1
  StoreOpeningHours:
    type: object
    properties:
      monday:
        $ref: '#/definitions/WorkingTime'
      tuesday:
        $ref: '#/definitions/WorkingTime'
      wednesday:
        $ref: '#/definitions/WorkingTime'
      thursday:
        $ref: '#/definitions/WorkingTime'
      friday:
        $ref: '#/definitions/WorkingTime'
      saturday:
        $ref: '#/definitions/WorkingTime'
      sunday:
        $ref: '#/definitions/WorkingTime'
  WorkingTime:
    type: object
    description: Store working hours; empty object when store is closed
    properties:
      startHours:
        type: number
        example: 9
      startMinutes:
        type: number
        example: 0
      endHours:
        type: number
        example: 18
      endMinutes:
        type: number
        example: 30
  GiftCertificateBalance:
    type: object
    required: 
      - cardNumber
      - pinNumber
    properties:
      cardNumber:
        type: string
        description: The gift card number
        pattern: '^[0-9]{19}$'
      pinNumber:
        type: string
        description: The pin number of the gift card
        pattern: '^[0-9]{4}$'
      balance:
        type: number
        pattern: "^\\d+((,|.)\\d{2})?$"
        description: The total current balance on the gift card